/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  GameFixedPaymaster,
  GameFixedPaymasterInterface,
} from "../GameFixedPaymaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "accountFactory",
        type: "address",
      },
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_erc20Token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_fixedFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_createFee",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "COST_OF_POST",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc20Token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fixedFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    name: "setEntryPoint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "theFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523480156200001157600080fd5b506040516200142838038062001428833981016040819052620000349162000179565b83620000403362000083565b6200004b81620000d3565b506001600160a01b03948516608052600280546001600160a01b031916939095169290921790935560039290925550600455620001de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b620000dd620000ff565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146200015e5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640160405180910390fd5b565b6001600160a01b03811681146200017657600080fd5b50565b600080600080600060a086880312156200019257600080fd5b85516200019f8162000160565b6020870151909550620001b28162000160565b6040870151909450620001c58162000160565b6060870151608090970151959894975095949392505050565b60805161122762000201600039600081816102660152610e3001526112276000f3fe6080604052600436106101295760003560e01c8063a9a23409116100a5578063c23a5cea11610074578063d0e30db011610059578063d0e30db014610335578063f2fde38b1461033d578063f465c77e1461035d57600080fd5b8063c23a5cea14610300578063c399ec881461032057600080fd5b8063a9a2340914610288578063b0d691fe146102a8578063b2db919b146102d5578063bb9fe6bf146102eb57600080fd5b8063796d4371116100fc5780638da5cb5b116100e15780638da5cb5b1461021357806391792d5b1461023e5780639f5ca2211461025457600080fd5b8063796d4371146101985780638a13eea7146101c157600080fd5b80630396cb601461012e578063205c287814610143578063584465f214610163578063715018a614610183575b600080fd5b61014161013c366004610ee2565b61038b565b005b34801561014f57600080fd5b5061014161015e366004610f31565b610421565b34801561016f57600080fd5b5061014161017e366004610f5d565b61049d565b34801561018f57600080fd5b506101416104ec565b3480156101a457600080fd5b506101ae613a9881565b6040519081526020015b60405180910390f35b3480156101cd57600080fd5b506002546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b8565b34801561021f57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166101ee565b34801561024a57600080fd5b506101ae60035481565b34801561026057600080fd5b506101ee7f000000000000000000000000000000000000000000000000000000000000000081565b34801561029457600080fd5b506101416102a3366004610f7a565b610500565b3480156102b457600080fd5b506001546101ee9073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102e157600080fd5b506101ae60045481565b3480156102f757600080fd5b5061014161051a565b34801561030c57600080fd5b5061014161031b366004610f5d565b6105a0565b34801561032c57600080fd5b506101ae610630565b6101416106c8565b34801561034957600080fd5b50610141610358366004610f5d565b610734565b34801561036957600080fd5b5061037d610378366004611009565b610748565b6040516101b892919061105d565b610393610add565b6001546040517f0396cb6000000000000000000000000000000000000000000000000000000000815263ffffffff8316600482015273ffffffffffffffffffffffffffffffffffffffff90911690630396cb609034906024016000604051808303818588803b15801561040557600080fd5b505af1158015610419573d6000803e3d6000fd5b505050505050565b610429610add565b6001546040517f205c287800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8481166004830152602482018490529091169063205c287890604401600060405180830381600087803b15801561040557600080fd5b6104a5610add565b600180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6104f4610add565b6104fe6000610b5e565b565b610508610bd3565b61051484848484610bf7565b50505050565b610522610add565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663bb9fe6bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561058c57600080fd5b505af1158015610514573d6000803e3d6000fd5b6105a8610add565b6001546040517fc23a5cea00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301529091169063c23a5cea90602401600060405180830381600087803b15801561061557600080fd5b505af1158015610629573d6000803e3d6000fd5b5050505050565b6001546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561069f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c391906110d8565b905090565b6001546040517fb760faf900000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9091169063b760faf99034906024016000604051808303818588803b15801561061557600080fd5b61073c610add565b61074581610d39565b50565b60606000613a988560a00135116107e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f47616d6546697865645061796d61737465723a2067617320746f6f206c6f772060448201527f666f7220706f73744f700000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107f360408601866110f1565b1590506109515761080385610ded565b60045460025473ffffffffffffffffffffffffffffffffffffffff166370a082316108316020890189610f5d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be91906110d8565b101561094c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f47616d6546697865645061796d61737465723a206e6f2062616c616e6365202860448201527f7072652d6372656174652900000000000000000000000000000000000000000060648201526084016107dd565b610a74565b60035460025473ffffffffffffffffffffffffffffffffffffffff166370a0823161097f6020890189610f5d565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156109e8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0c91906110d8565b1015610a74576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f47616d6546697865645061796d61737465723a206e6f2062616c616e6365000060448201526064016107dd565b610a816020860186610f5d565b6040805173ffffffffffffffffffffffffffffffffffffffff909216602083015201604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905295600095509350505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146104fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107dd565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60015473ffffffffffffffffffffffffffffffffffffffff1633146104fe57600080fd5b6000610c0583850185610f5d565b6002546003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8085166004830152306024830152604482019290925292935016906323b872dd906064016020604051808303816000875af1158015610c89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cad919061115d565b610629576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f47616d6546697865645061796d61737465723a207472616e736665722066616960448201527f6c6564000000000000000000000000000000000000000000000000000000000060648201526084016107dd565b610d41610add565b73ffffffffffffffffffffffffffffffffffffffff8116610de4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016107dd565b61074581610b5e565b6000610dfc60408301836110f1565b610e0b9160149160009161117f565b610e14916111a9565b60601c905073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168114610ede576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f47616d6546697865645061796d61737465723a2077726f6e67206163636f756e60448201527f7420666163746f7279000000000000000000000000000000000000000000000060648201526084016107dd565b5050565b600060208284031215610ef457600080fd5b813563ffffffff81168114610f0857600080fd5b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461074557600080fd5b60008060408385031215610f4457600080fd5b8235610f4f81610f0f565b946020939093013593505050565b600060208284031215610f6f57600080fd5b8135610f0881610f0f565b60008060008060608587031215610f9057600080fd5b843560038110610f9f57600080fd5b9350602085013567ffffffffffffffff80821115610fbc57600080fd5b818701915087601f830112610fd057600080fd5b813581811115610fdf57600080fd5b886020828501011115610ff157600080fd5b95986020929092019750949560400135945092505050565b60008060006060848603121561101e57600080fd5b833567ffffffffffffffff81111561103557600080fd5b8401610160818703121561104857600080fd5b95602085013595506040909401359392505050565b604081526000835180604084015260005b8181101561108b576020818701810151606086840101520161106e565b8181111561109d576000606083860101525b50602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b6000602082840312156110ea57600080fd5b5051919050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261112657600080fd5b83018035915067ffffffffffffffff82111561114157600080fd5b60200191503681900382131561115657600080fd5b9250929050565b60006020828403121561116f57600080fd5b81518015158114610f0857600080fd5b6000808585111561118f57600080fd5b8386111561119c57600080fd5b5050820193919092039150565b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000081358181169160148510156111e95780818660140360031b1b83161692505b50509291505056fea264697066735822122009bf543fd15b77eda8e44b789e00c227e4d4ea44d7f8dfab3d06188c3f4b958f64736f6c634300080f0033";

type GameFixedPaymasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GameFixedPaymasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GameFixedPaymaster__factory extends ContractFactory {
  constructor(...args: GameFixedPaymasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    accountFactory: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _erc20Token: PromiseOrValue<string>,
    _fixedFee: PromiseOrValue<BigNumberish>,
    _createFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GameFixedPaymaster> {
    return super.deploy(
      accountFactory,
      _entryPoint,
      _erc20Token,
      _fixedFee,
      _createFee,
      overrides || {}
    ) as Promise<GameFixedPaymaster>;
  }
  override getDeployTransaction(
    accountFactory: PromiseOrValue<string>,
    _entryPoint: PromiseOrValue<string>,
    _erc20Token: PromiseOrValue<string>,
    _fixedFee: PromiseOrValue<BigNumberish>,
    _createFee: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      accountFactory,
      _entryPoint,
      _erc20Token,
      _fixedFee,
      _createFee,
      overrides || {}
    );
  }
  override attach(address: string): GameFixedPaymaster {
    return super.attach(address) as GameFixedPaymaster;
  }
  override connect(signer: Signer): GameFixedPaymaster__factory {
    return super.connect(signer) as GameFixedPaymaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GameFixedPaymasterInterface {
    return new utils.Interface(_abi) as GameFixedPaymasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GameFixedPaymaster {
    return new Contract(address, _abi, signerOrProvider) as GameFixedPaymaster;
  }
}
