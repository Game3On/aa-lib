/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  GnosisSafeAccountFactory,
  GnosisSafeAccountFactoryInterface,
} from "../../../../contracts/gnosis/GnosisAccountFactory.sol/GnosisSafeAccountFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract GnosisSafeProxyFactory",
        name: "_proxyFactory",
        type: "address",
      },
      {
        internalType: "address",
        name: "_safeSingleton",
        type: "address",
      },
      {
        internalType: "contract EIP4337Manager",
        name: "_eip4337Manager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "eip4337Manager",
    outputs: [
      {
        internalType: "contract EIP4337Manager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "getAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxyFactory",
    outputs: [
      {
        internalType: "contract GnosisSafeProxyFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "safeSingleton",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b50604051610b74380380610b7483398101604081905261002f91610064565b6001600160a01b0392831660805290821660a0521660c0526100b1565b6001600160a01b038116811461006157600080fd5b50565b60008060006060848603121561007957600080fd5b83516100848161004c565b60208501519093506100958161004c565b60408501519092506100a68161004c565b809150509250925092565b60805160a05160c051610a6561010f600039600081816071015281816103d80152818161047f015261053101526000818160e7015281816101a301526102e401526000818161010e01528181610167015261032c0152610a656000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80638cb84e18116100505780638cb84e18146100cf578063ac7d146b146100e2578063c10f1a751461010957600080fd5b80630e8ac4881461006c5780635fbfb9cf146100bc575b600080fd5b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100936100ca366004610640565b610130565b6100936100dd366004610640565b610238565b6100937f000000000000000000000000000000000000000000000000000000000000000081565b6100937f000000000000000000000000000000000000000000000000000000000000000081565b60008061013d8484610238565b905073ffffffffffffffffffffffffffffffffffffffff81163b801561016557509050610232565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631688f0b97f00000000000000000000000000000000000000000000000000000000000000006101cb8861035a565b876040518463ffffffff1660e01b81526004016101ea939291906106e6565b6020604051808303816000875af1158015610209573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022d9190610725565b925050505b92915050565b6000806102448461035a565b9050600081805190602001208460405160200161026b929190918252602082015260400190565b6040516020818303038152906040528051906020012090506000604051806020016102959061060e565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604081905261030d919073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690602001610749565b60405160208183030381529060405290506103508282805190602001207f00000000000000000000000000000000000000000000000000000000000000006105e4565b9695505050505050565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106103945761039461076b565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060006001905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370b8a01d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610725565b60405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166024820152909150600090604401604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd041593b000000000000000000000000000000000000000000000000000000001790525190915061056490859085907f000000000000000000000000000000000000000000000000000000000000000090859087906000908190819060240161079a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb63e800d000000000000000000000000000000000000000000000000000000001790529695505050505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6101988061089883390190565b73ffffffffffffffffffffffffffffffffffffffff8116811461063d57600080fd5b50565b6000806040838503121561065357600080fd5b823561065e8161061b565b946020939093013593505050565b60005b8381101561068757818101518382015260200161066f565b83811115610696576000848401525b50505050565b600081518084526106b481602086016020860161066c565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000610715606083018561069c565b9050826040830152949350505050565b60006020828403121561073757600080fd5b81516107428161061b565b9392505050565b6000835161075b81846020880161066c565b9190910191825250602001919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6101008082528951908201819052600090610120830190602090818d01845b828110156107eb57815173ffffffffffffffffffffffffffffffffffffffff16855293830193908301906001016107b9565b50505083018a905273ffffffffffffffffffffffffffffffffffffffff891660408401528281036060840152610821818961069c565b915050610846608083018773ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff851660a08301528360c083015261088a60e083018473ffffffffffffffffffffffffffffffffffffffff169052565b999850505050505050505056fe608060405234801561001057600080fd5b5060405161019838038061019883398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b60a1806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea26469706673582212208f04375df5b4256b8c775e02f5902b609d00c8eaafa6697689579539846805b664736f6c634300080f0033a2646970667358221220e55b72c43a5fc2f1ec891698380323ba3325dcd01788bec437539ecd75ac2b7364736f6c634300080f0033";

type GnosisSafeAccountFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: GnosisSafeAccountFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class GnosisSafeAccountFactory__factory extends ContractFactory {
  constructor(...args: GnosisSafeAccountFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _proxyFactory: PromiseOrValue<string>,
    _safeSingleton: PromiseOrValue<string>,
    _eip4337Manager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<GnosisSafeAccountFactory> {
    return super.deploy(
      _proxyFactory,
      _safeSingleton,
      _eip4337Manager,
      overrides || {}
    ) as Promise<GnosisSafeAccountFactory>;
  }
  override getDeployTransaction(
    _proxyFactory: PromiseOrValue<string>,
    _safeSingleton: PromiseOrValue<string>,
    _eip4337Manager: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _proxyFactory,
      _safeSingleton,
      _eip4337Manager,
      overrides || {}
    );
  }
  override attach(address: string): GnosisSafeAccountFactory {
    return super.attach(address) as GnosisSafeAccountFactory;
  }
  override connect(signer: Signer): GnosisSafeAccountFactory__factory {
    return super.connect(signer) as GnosisSafeAccountFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GnosisSafeAccountFactoryInterface {
    return new utils.Interface(_abi) as GnosisSafeAccountFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): GnosisSafeAccountFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as GnosisSafeAccountFactory;
  }
}
